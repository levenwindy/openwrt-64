name: Build MT3000

on:
  push:
    paths:
      - '.github/workflows/MT3000.yml'
      
env:
  REPO_URL: https://github.com/gl-inet/gl-infra-builder
  REPO_BRANCH: master
  TZ: Asia/Shanghai
  NAME: MT3000_glinet

jobs:
  build:
    #runs-on: ubuntu-latest 
    runs-on: ubuntu-20.04
    # runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main
       
    - name: Start SSH via Ngrok
      #if: ${{ failure() }}
      run: curl -sL https://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
      env:
        # After sign up on the https://ngrok.com/ 
        # You can find this token here: https://dashboard.ngrok.com/get-started/setup
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN_1 }}
        # This password you will use when authorizing via SSH
        USER_PASS: ${{ secrets.USER_PASS_1 }}
        
        
    - name: Initialization environment
    # sudo -E apt-get install git  asciidoc bash bc binutils bzip2 fastjar flex gawk gcc genisoimage gettext git intltool jikespg libgtk2.0-dev libncurses5-dev libssl-dev make mercurial patch perl-modules python2.7-dev rsync ruby sdcc subversion unzip util-linux wget xsltproc zlib1g-dev zlib1g-dev -y
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
              gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget qemu-utils
      
    - name:  git clone 【编译 gl-inet/gl-infra-builder.git (无GL.iNet包)
      id: gitclone
      run: |
         git clone https://github.com/gl-inet/gl-infra-builder.git && cd gl-infra-builder
         git config --global user.email 'youremail.com'
         git config --global user.name 'name'

    - name:  list the openwrt verizon
      run: |
         cd gl-infra-builder
         ls configs -hl
    
    - name:  git checkout1
      run: |
        cd gl-infra-builder
        git checkout v4.2.0_mt3000_release1
    
    - name:  Don kill
      run: |
        sleep 3h
       
    - name: config-mt798x-7.6.6.1.yml
      run: |
         cd gl-infra-builder
         python3 setup.py -c configs/config-mt798x-7.6.6.1.yml
      
    - name:  target_mt7981_gl-mt3000 luci
      run: |
        cd gl-infra-builder/mt7981
        ./scripts/gen_config.py target_mt7981_gl-mt3000 luci
        
   # - name: 1.1 编译 make manuconfig
     # Prevent to killing instance after failure
   #   run: |
   #     cd gl-infra-builder/mt7981
    #    make V=s -j2
        
    - name:  clone glinet4.x
        # glinet 修改代码
        # cp $GITHUB_WORKSPACE/360T7/gl_pkg_config_mt3000.mk ./glinet4.x/mt7981/gl_pkg_config.mk && \
        # cp ./glinet4.x/pkg_config/gl_pkg_config_mt3000.mk  ./glinet4.x/mt7981/gl_pkg_config.mk && \
      run: |
        cd gl-infra-builder/mt7981
        git clone https://github.com/gl-inet/glinet4.x.git

    - name:  git checkout2
      run: |
        cd gl-infra-builder/mt7981
        git checkout v4.2.0_mt3000_release1

    - name:  gen_config.py glinet_depends
      run: |
        cd gl-infra-builder/mt7981
        cp ./glinet4.x/pkg_config/gl_pkg_config_mt3000.mk  ./glinet4.x/mt7981/gl_pkg_config.mk && \
              cp ./glinet4.x/pkg_config/glinet_depends_mt3000.yml  ./profiles/glinet_depends.yml     && \
              ./scripts/gen_config.py glinet_depends
    
         
    - name: 查看 .config 
      run: |
        cd gl-infra-builder/mt7981
        cat .config
        
    # make -j2 GL_PKGDIR=`pwd`/glinet4.x/mt7981/ || 
    - name: 1.2 编译 
      run: |
        cd gl-infra-builder/mt7981
        make V=s -j2 GL_PKGDIR=`pwd`/glinet4.x/mt7981/
        
    # - name: Don kill instace
    #   if: ${{ failure() }}
     #  run: |
       #  sleep 1.5h

        
    - name : 上传附件 target
      uses: actions/upload-artifact@master
      with:
        name: $NAME
        path: gl-infra-builder/mt7981/bin/
        if-no-files-found: error
        
  
