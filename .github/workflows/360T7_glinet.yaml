name: Build 360T7_glinet

on:
  push:
    paths:
      - '.github/workflows/360T7_glinet.yaml'
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/FUjr/gl-infra-builder
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai
  NAME: 360T7_glinet

jobs:
  build:
    #runs-on: ubuntu-latest 
    runs-on: ubuntu-22.04
    # runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Start SSH via Ngrok
      if: ${{ failure() }}
      run: curl -sL https://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
      env:
        # After sign up on the https://ngrok.com/ 
        # You can find this token here: https://dashboard.ngrok.com/get-started/setup
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        # This password you will use when authorizing via SSH
        USER_PASS: ${{ secrets.USER_PASS }}
        
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
              gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget qemu-utils
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      
    - name:  git clone 【编译360t7-108M OpenWrt固件(无GL.iNet包)
      id: gitclone
      run: |
         git clone https://github.com/FUjr/gl-infra-builder.git
      
    - name: config-mt798x-7.6.6.1.yml
      run: |
         git config --global user.email 'youremail.com'
         git config --global user.name 'your name'
         cd gl-infra-builder 
         python3 setup.py -c configs/config-mt798x-7.6.6.1.yml
      
    - name:  target_mt7981_360t7-108M
      run: |
        cd gl-infra-builder/mt7981
        ./scripts/gen_config.py target_mt7981_360t7-108M luci
      
    - name:  glinet4.x.git
      run: |
        cd gl-infra-builder/mt7981
        git clone https://github.com/gl-inet/glinet4.x.git && \
        cp ./glinet4.x/pkg_config/gl_pkg_config_mt3000.mk  ./glinet4.x/mt7981/gl_pkg_config.mk && \
        ./scripts/gen_config.py target_mt7981_360t7-108M glinet_depends
        
    - name: make 编译
      run: |
        make -j2 GL_PKGDIR=`pwd`/glinet4.x/mt7981/ && make V=s -j1 GL_PKGDIR=`pwd`/glinet4.x/mt7981/

    - name: Don't kill instace
      if: ${{ failure() }}
     # Prevent to killing instance after failure
      run: |
        sleep 1h
        
    - name : 上传附件 target
      uses: actions/upload-artifact@master
      with:
        name: mt7981
        path: gl-infra-builder/mt7981/target
        if-no-files-found: error
        
  
